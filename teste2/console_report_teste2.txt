- Starting process.
- Building directory structure to output files in C:\\Users\\Iago\\git\\Relationship\teste2
- Parsing configuration file config.txt - 62 itens.
- Parsing user terms - 4 terms parsed.
- Parsing useless concepts - 26 concepts parsed.
- Parsing vocabulary - 55 sentences parsed.
- Reading RDFs files names to put in table - 9233 RDFs files identified.
- Reading my knowledge base file - 839 nodes parsed.

*** Iteration 0 ***
- Assembling queries - 4 new queries assembled.
- Collecting RDFs - 254 new RDFs triples collected (0 in internet, 254 in file).
- Looking for concepts with zero RDFs - neither concept found.
- Building Stream Graph Data - 176 new nodes, 176 new edges in Stream Graph - 2 useless RDFs.
- Creating edge hash table - 32 edges.
- Quantities Stream Graph built: 176 nodes, 175 edges.
- Verifying whether apply N-degree filter: iteration (0: >= 1), nodes count (176: > 10000) - not ok.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 176 nodes, 176 edges in the graph structure.
- Classifying connected component - quantity of connected components: 2.
- Calculating level of relationship between original concepts - level: 3/6 (50% complete).
- Building GEXF Graph File (generated file: C:\\Users\\Iago\\git\\Relationship\teste2\graph_teste2_t1_iteration00.gexf).
- Verifying exit conditions: maximum iteration (0: = 10) 
  or [ minimum iteration (0: >= 4) and connected component (2: = 1) ]
  or [ minimum iteration (0: >= 8) and relationship level between original concepts (3: = 0) ]
- Calculating distance measures of the whole network - 176 nodes, 175 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 176 nodes, 175 edges.
- Storing eigenvector measures of the whole network to main node table.
- Sorting measures of the whole network.
- Building sub-graphs ranks.
- Building sub-graphs tables belong to connected components.
- Sorting connected components ranks.
- Selecting largest nodes by betweenness+closeness - 8 new selected concepts.
- Selecting largest nodes by eigenvector - 4 new selected concepts.
- Reporting selected nodes to new iteration.
- Duplicating concepts with "Category:" subword - 3 new concepts inserted.
- Preparing data to new iteration - 15 concepts inserted in the set of query Sparql.

*** Iteration 1 ***
- Assembling queries - 15 new queries assembled.
- Collecting RDFs - 531 new RDFs triples collected (0 in internet, 531 in file).
- Looking for concepts with zero RDFs - 1 concepts found and excluded.
- Building Stream Graph Data - 449 new nodes, 449 new edges in Stream Graph - 2 useless RDFs.
- Creating edge hash table - 45 edges.
- Quantities Stream Graph built: 625 nodes, 647 edges.
- Second iteration or more: copying old elements of the last iteration - 4 elements copied.
- Verifying whether apply N-degree filter: iteration (1: >= 1), nodes count (625: > 10000) - not ok.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 625 nodes, 625 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating level of relationship between original concepts - level: 0/6 (100% complete).
- Building GEXF Graph File (generated file: C:\\Users\\Iago\\git\\Relationship\teste2\graph_teste2_t1_iteration01.gexf).
- Verifying exit conditions: maximum iteration (1: = 10) 
  or [ minimum iteration (1: >= 4) and connected component (1: = 1) ]
  or [ minimum iteration (1: >= 8) and relationship level between original concepts (0: = 0) ]
- Calculating distance measures of the whole network - 625 nodes, 647 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 625 nodes, 647 edges.
- Storing eigenvector measures of the whole network to main node table.
- Sorting measures of the whole network.
- Building sub-graphs ranks.
- Building sub-graphs tables belong to connected components.
- Sorting connected components ranks.
- Selecting largest nodes by betweenness+closeness - 8 new selected concepts.
- Selecting largest nodes by eigenvector - 4 new selected concepts.
- Reporting selected nodes to new iteration.
- Duplicating concepts with "Category:" subword - 4 new concepts inserted.
- Preparing data to new iteration - 16 concepts inserted in the set of query Sparql.

*** Iteration 2 ***
- Assembling queries - 16 new queries assembled.
- Collecting RDFs - 740 new RDFs triples collected (0 in internet, 740 in file).
- Looking for concepts with zero RDFs - 3 concepts found and excluded.
- Building Stream Graph Data - 552 new nodes, 552 new edges in Stream Graph - 1 useless RDFs.
- Creating edge hash table - 57 edges.
- Quantities Stream Graph built: 1177 nodes, 1292 edges.
- Second iteration or more: copying old elements of the last iteration - 18 elements copied.
- Verifying whether apply N-degree filter: iteration (2: >= 1), nodes count (1177: > 10000) - not ok.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 1177 nodes, 1177 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating level of relationship between original concepts - level: 0/6 (100% complete).
- Building GEXF Graph File (generated file: C:\\Users\\Iago\\git\\Relationship\teste2\graph_teste2_t1_iteration02.gexf).
- Verifying exit conditions: maximum iteration (2: = 10) 
  or [ minimum iteration (2: >= 4) and connected component (1: = 1) ]
  or [ minimum iteration (2: >= 8) and relationship level between original concepts (0: = 0) ]
- Calculating distance measures of the whole network - 1177 nodes, 1292 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 1177 nodes, 1292 edges.
- Storing eigenvector measures of the whole network to main node table.
- Sorting measures of the whole network.
- Building sub-graphs ranks.
- Building sub-graphs tables belong to connected components.
- Sorting connected components ranks.
- Selecting largest nodes by betweenness+closeness - 8 new selected concepts.
- Selecting largest nodes by eigenvector - 4 new selected concepts.
- Reporting selected nodes to new iteration.
- Duplicating concepts with "Category:" subword - 8 new concepts inserted.
- Preparing data to new iteration - 17 concepts inserted in the set of query Sparql.

*** Iteration 3 ***
- Assembling queries - 17 new queries assembled.
- Collecting RDFs - 6473 new RDFs triples collected (0 in internet, 6473 in file).
- Looking for concepts with zero RDFs - 2 concepts found and excluded.
- Building Stream Graph Data - 4356 new nodes, 4356 new edges in Stream Graph - 0 useless RDFs.
- Creating edge hash table - 123 edges.
- Quantities Stream Graph built: 5533 nodes, 5848 edges.
- Second iteration or more: copying old elements of the last iteration - 31 elements copied.
- Verifying whether apply N-degree filter: iteration (3: >= 1), nodes count (5533: > 10000) - not ok.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 5533 nodes, 5533 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating level of relationship between original concepts - level: 0/6 (100% complete).
- Building GEXF Graph File (generated file: C:\\Users\\Iago\\git\\Relationship\teste2\graph_teste2_t1_iteration03.gexf).
- Verifying exit conditions: maximum iteration (3: = 10) 
  or [ minimum iteration (3: >= 4) and connected component (1: = 1) ]
  or [ minimum iteration (3: >= 8) and relationship level between original concepts (0: = 0) ]
- Calculating distance measures of the whole network - 5533 nodes, 5848 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 5533 nodes, 5848 edges.
- Storing eigenvector measures of the whole network to main node table.
- Sorting measures of the whole network.
- Building sub-graphs ranks.
- Building sub-graphs tables belong to connected components.
- Sorting connected components ranks.
- Selecting largest nodes by betweenness+closeness - 6 new selected concepts.
- Selecting largest nodes by eigenvector - 4 new selected concepts.
- Reporting selected nodes to new iteration.
- Duplicating concepts with "Category:" subword - 6 new concepts inserted.
- Preparing data to new iteration - 15 concepts inserted in the set of query Sparql.

*** Iteration 4 ***
- Assembling queries - 15 new queries assembled.
- Collecting RDFs - 1506 new RDFs triples collected (0 in internet, 1506 in file).
- Looking for concepts with zero RDFs - 2 concepts found and excluded.
- Building Stream Graph Data - 1033 new nodes, 1033 new edges in Stream Graph - 2 useless RDFs.
- Creating edge hash table - 148 edges.
- Quantities Stream Graph built: 6566 nodes, 6962 edges.
- Second iteration or more: copying old elements of the last iteration - 46 elements copied.
- Verifying whether apply N-degree filter: iteration (4: >= 1), nodes count (6566: > 10000) - not ok.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 6566 nodes, 6566 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating level of relationship between original concepts - level: 0/6 (100% complete).
- Building GEXF Graph File (generated file: C:\\Users\\Iago\\git\\Relationship\teste2\graph_teste2_t1_iteration04.gexf).
- Verifying exit conditions: maximum iteration (4: = 10) 
  or [ minimum iteration (4: >= 4) and connected component (1: = 1) ]
  or [ minimum iteration (4: >= 8) and relationship level between original concepts (0: = 0) ]
- Ending loop, connected component = 1 reached.

*** Intermediate stage 1 (apply k-core) ***
- Verifying whether apply K-core filter: quantity of nodes (6566: > 700) - OK!
- Starting 2-core filter algorithm  - 0 recovered nodes - 6249 deleted nodes (6 selected concepts) and 6249 deleted edges
- Remained Stream Graph: 317 nodes, 713 edges.
- Calculating level of relationship between original concepts - level: 0/6 (100% complete).
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 317 nodes, 317 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Building GEXF Graph File (generated file: C:\\Users\\Iago\\git\\Relationship\teste2\graph_teste2_t2_after_iterations_and_kcore.gexf).

*** Intermediate stage 2 (build head nodes list to calculate paths in the final stage) ***
- Current concepts quantity: 317 stream graph  (4 original concepts).  Goal of concepts quantity: 11 good, 19 maximum.
- Building head nodes from original concepts and selected concepts - 31 nodes (0 discarded because betweenness equals zero calculated in iteration 3).
- Filtering stream graph: only nodes and edges belong to shortest path between head nodes - 465 paths found.
- Remained Stream Graph: 63 nodes, 146 edges.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 63 nodes, 63 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Building GEXF Graph File (generated file: C:\\Users\\Iago\\git\\Relationship\teste2\graph_teste2_t3_after_head_nodes_path.gexf).

*** Intermediate stage 3 (remove nodes steadying unique connected component ***
- Current concepts quantity: 63 stream graph  (4 original concepts).  Goal of concepts quantity: 11 good, 19 maximum.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 63 nodes, 63 edges in the graph structure.
- Calculating distance measures of the whole network - 63 nodes, 146 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 63 nodes, 146 edges.
- Storing eigenvector measures of the whole network to main node table.
- Classifying connected component - quantity of connected components: 1.
- Creating eccentricity and average sort table of remaining concepts - 59 nodes stored and sorted.
- Node data with least eccentricity and average: Disruptive innovation (position in group: 0/59)
- Verifying whether Disruptive innovation has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 62 nodes, 62 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 62 nodes, 145 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 62 nodes, 145 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 58 nodes stored and sorted.
- Node data with least eccentricity and average: Java (programming language) (position in group: 0/58)
- Verifying whether Java (programming language) has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 61 nodes, 61 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 61 nodes, 143 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 61 nodes, 143 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 57 nodes stored and sorted.
- Node data with least eccentricity and average: Technology (position in group: 0/57)
- Verifying whether Technology has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 60 nodes, 60 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 60 nodes, 141 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 60 nodes, 141 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 56 nodes stored and sorted.
- Node data with least eccentricity and average: Emerging technologies (position in group: 0/56)
- Verifying whether Emerging technologies has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 59 nodes, 59 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 59 nodes, 140 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 59 nodes, 140 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 55 nodes stored and sorted.
- Node data with least eccentricity and average: Category:Media technology (position in group: 0/55)
- Verifying whether Category:Media technology has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 58 nodes, 58 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 58 nodes, 138 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 58 nodes, 138 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 54 nodes stored and sorted.
- Node data with least eccentricity and average: Multimedia (position in group: 0/54)
- Verifying whether Multimedia has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 57 nodes, 57 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 57 nodes, 136 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 57 nodes, 136 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 53 nodes stored and sorted.
- Node data with least eccentricity and average: Richard Susskind (position in group: 0/53)
- Verifying whether Richard Susskind has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 56 nodes, 56 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 56 nodes, 134 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 56 nodes, 134 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 52 nodes stored and sorted.
- Node data with least eccentricity and average: Information technology (position in group: 0/52)
- Verifying whether Information technology has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 55 nodes, 55 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 55 nodes, 132 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 55 nodes, 132 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 51 nodes stored and sorted.
- Node data with least eccentricity and average: Thomas Reardon (position in group: 0/51)
- Verifying whether Thomas Reardon has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 54 nodes, 54 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 54 nodes, 131 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 54 nodes, 131 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 50 nodes stored and sorted.
- Node data with least eccentricity and average: Software-defined storage (position in group: 0/50)
- Verifying whether Software-defined storage has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 53 nodes, 53 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 53 nodes, 129 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 53 nodes, 129 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 49 nodes stored and sorted.
- Node data with least eccentricity and average: XML database (position in group: 0/49)
- Verifying whether XML database has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 52 nodes, 52 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 52 nodes, 127 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 52 nodes, 127 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 48 nodes stored and sorted.
- Node data with least eccentricity and average: Category:Open data (position in group: 0/48)
- Verifying whether Category:Open data has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 51 nodes, 51 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 51 nodes, 125 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 51 nodes, 125 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 47 nodes stored and sorted.
- Node data with least eccentricity and average: Category:Structured storage (position in group: 0/47)
- Verifying whether Category:Structured storage has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 50 nodes, 50 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 50 nodes, 123 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 50 nodes, 123 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 46 nodes stored and sorted.
- Node data with least eccentricity and average: Datafication (position in group: 0/46)
- Verifying whether Datafication has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 49 nodes, 49 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 49 nodes, 121 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 49 nodes, 121 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 45 nodes stored and sorted.
- Node data with least eccentricity and average: Data steward (position in group: 0/45)
- Verifying whether Data steward has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 48 nodes, 48 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 48 nodes, 119 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 48 nodes, 119 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 44 nodes stored and sorted.
- Node data with least eccentricity and average: E-services (position in group: 0/44)
- Verifying whether E-services has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 47 nodes, 47 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 47 nodes, 117 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 47 nodes, 117 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 43 nodes stored and sorted.
- Node data with least eccentricity and average: Chunked transfer encoding (position in group: 0/43)
- Verifying whether Chunked transfer encoding has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 46 nodes, 46 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 46 nodes, 115 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 46 nodes, 115 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 42 nodes stored and sorted.
- Node data with least eccentricity and average: Information architecture (position in group: 0/42)
- Verifying whether Information architecture has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 45 nodes, 45 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 45 nodes, 112 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 45 nodes, 112 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 41 nodes stored and sorted.
- Node data with least eccentricity and average: England (position in group: 0/41)
- Verifying whether England has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 44 nodes, 44 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 44 nodes, 110 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 44 nodes, 110 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 40 nodes stored and sorted.
- Node data with least eccentricity and average: Royal Academy of Engineering (position in group: 0/40)
- Verifying whether Royal Academy of Engineering has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 43 nodes, 43 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 43 nodes, 107 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 43 nodes, 107 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 39 nodes stored and sorted.
- Node data with least eccentricity and average: United States (position in group: 0/39)
- Verifying whether United States has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 42 nodes, 42 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 42 nodes, 105 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 42 nodes, 105 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 38 nodes stored and sorted.
- Node data with least eccentricity and average: Category:Application layer protocols (position in group: 0/38)
- Verifying whether Category:Application layer protocols has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 41 nodes, 41 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 41 nodes, 102 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 41 nodes, 102 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 37 nodes stored and sorted.
- Node data with least eccentricity and average: Category:Hypertext Transfer Protocol (position in group: 0/37)
- Verifying whether Category:Hypertext Transfer Protocol has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 40 nodes, 40 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 40 nodes, 98 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 40 nodes, 98 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 36 nodes stored and sorted.
- Node data with least eccentricity and average: Category:Web development (position in group: 0/36)
- Verifying whether Category:Web development has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 39 nodes, 39 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 39 nodes, 97 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 39 nodes, 97 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 35 nodes stored and sorted.
- Node data with least eccentricity and average: Order of the British Empire (position in group: 0/35)
- Verifying whether Order of the British Empire has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 38 nodes, 38 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 38 nodes, 93 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 38 nodes, 93 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 34 nodes stored and sorted.
- Node data with least eccentricity and average: Suzanne Briet (position in group: 0/34)
- Verifying whether Suzanne Briet has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 37 nodes, 37 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 37 nodes, 91 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 37 nodes, 91 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 33 nodes stored and sorted.
- Node data with least eccentricity and average: Category:Information technology (position in group: 0/33)
- Verifying whether Category:Information technology has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 36 nodes, 36 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 36 nodes, 89 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 36 nodes, 89 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 32 nodes stored and sorted.
- Node data with least eccentricity and average: Category:Technology by type (position in group: 0/32)
- Verifying whether Category:Technology by type has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 35 nodes, 35 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 35 nodes, 88 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 35 nodes, 88 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 31 nodes stored and sorted.
- Node data with least eccentricity and average: Category:Knowledge (position in group: 0/31)
- Verifying whether Category:Knowledge has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 34 nodes, 34 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 34 nodes, 86 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 34 nodes, 86 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 30 nodes stored and sorted.
- Node data with least eccentricity and average: Category:Information science (position in group: 0/30)
- Verifying whether Category:Information science has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 33 nodes, 33 edges in the graph structure.
- Classifying connected component - quantity of connected components: 2.
- Node did not exclude: Category:Information science (connected component improves 1 to 2)
- Node data with least eccentricity and average: Jeni Tennison (position in group: 1/30)
- Verifying whether Jeni Tennison has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 33 nodes, 33 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 33 nodes, 85 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 33 nodes, 85 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 29 nodes stored and sorted.
- Node data with least eccentricity and average: Category:Information science (position in group: 0/29)
- Verifying whether Category:Information science has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 32 nodes, 32 edges in the graph structure.
- Classifying connected component - quantity of connected components: 2.
- Node did not exclude: Category:Information science (connected component improves 1 to 2)
- Node data with least eccentricity and average: Farshad Fotouhi (position in group: 1/29)
- Verifying whether Farshad Fotouhi has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 32 nodes, 32 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 32 nodes, 84 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 32 nodes, 84 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 28 nodes stored and sorted.
- Node data with least eccentricity and average: Category:Information science (position in group: 0/28)
- Verifying whether Category:Information science has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 31 nodes, 31 edges in the graph structure.
- Classifying connected component - quantity of connected components: 2.
- Node did not exclude: Category:Information science (connected component improves 1 to 2)
- Node data with least eccentricity and average: Wendy Hall (position in group: 1/28)
- Verifying whether Wendy Hall has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 31 nodes, 31 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 31 nodes, 83 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 31 nodes, 83 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 27 nodes stored and sorted.
- Node data with least eccentricity and average: Category:Information science (position in group: 0/27)
- Verifying whether Category:Information science has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 30 nodes, 30 edges in the graph structure.
- Classifying connected component - quantity of connected components: 2.
- Node did not exclude: Category:Information science (connected component improves 1 to 2)
- Node data with least eccentricity and average: Carole Goble (position in group: 1/27)
- Verifying whether Carole Goble has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 30 nodes, 30 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 30 nodes, 82 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 30 nodes, 82 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 26 nodes stored and sorted.
- Node data with least eccentricity and average: Category:Information science (position in group: 0/26)
- Verifying whether Category:Information science has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 29 nodes, 29 edges in the graph structure.
- Classifying connected component - quantity of connected components: 2.
- Node did not exclude: Category:Information science (connected component improves 1 to 2)
- Node data with least eccentricity and average: Linked Data Platform (position in group: 1/26)
- Verifying whether Linked Data Platform has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 29 nodes, 29 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 29 nodes, 80 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 29 nodes, 80 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 25 nodes stored and sorted.
- Node data with least eccentricity and average: Category:Information science (position in group: 0/25)
- Verifying whether Category:Information science has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 28 nodes, 28 edges in the graph structure.
- Classifying connected component - quantity of connected components: 2.
- Node did not exclude: Category:Information science (connected component improves 1 to 2)
- Node data with least eccentricity and average: DBpedia (position in group: 1/25)
- Verifying whether DBpedia has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 28 nodes, 28 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 28 nodes, 78 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 28 nodes, 78 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 24 nodes stored and sorted.
- Node data with least eccentricity and average: Category:Information science (position in group: 0/24)
- Verifying whether Category:Information science has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 27 nodes, 27 edges in the graph structure.
- Classifying connected component - quantity of connected components: 2.
- Node did not exclude: Category:Information science (connected component improves 1 to 2)
- Node data with least eccentricity and average: Internationalized resource identifier (position in group: 1/24)
- Verifying whether Internationalized resource identifier has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 27 nodes, 27 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 27 nodes, 75 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 27 nodes, 75 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 23 nodes stored and sorted.
- Node data with least eccentricity and average: Category:Information science (position in group: 0/23)
- Verifying whether Category:Information science has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 26 nodes, 26 edges in the graph structure.
- Classifying connected component - quantity of connected components: 2.
- Node did not exclude: Category:Information science (connected component improves 1 to 2)
- Node data with least eccentricity and average: Stardog (position in group: 1/23)
- Verifying whether Stardog has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 26 nodes, 26 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 26 nodes, 72 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 26 nodes, 72 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 22 nodes stored and sorted.
- Node data with least eccentricity and average: Category:Information science (position in group: 0/22)
- Verifying whether Category:Information science has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 25 nodes, 25 edges in the graph structure.
- Classifying connected component - quantity of connected components: 2.
- Node did not exclude: Category:Information science (connected component improves 1 to 2)
- Node data with least eccentricity and average: Ontology alignment (position in group: 1/22)
- Verifying whether Ontology alignment has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 25 nodes, 25 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 25 nodes, 68 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 25 nodes, 68 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 21 nodes stored and sorted.
- Node data with least eccentricity and average: Category:Information science (position in group: 0/21)
- Verifying whether Category:Information science has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 24 nodes, 24 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 24 nodes, 64 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 24 nodes, 64 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 20 nodes stored and sorted.
- Node data with least eccentricity and average: Turtle (syntax) (position in group: 0/20)
- Verifying whether Turtle (syntax) has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 23 nodes, 23 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 23 nodes, 60 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 23 nodes, 60 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 19 nodes stored and sorted.
- Node data with least eccentricity and average: UMBEL (position in group: 0/19)
- Verifying whether UMBEL has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 22 nodes, 22 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 22 nodes, 56 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 22 nodes, 56 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 18 nodes stored and sorted.
- Node data with least eccentricity and average: Schema.org (position in group: 0/18)
- Verifying whether Schema.org has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 21 nodes, 21 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 21 nodes, 51 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 21 nodes, 51 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 17 nodes stored and sorted.
- Node data with least eccentricity and average: RDFa (position in group: 0/17)
- Verifying whether RDFa has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 20 nodes, 20 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 20 nodes, 45 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 20 nodes, 45 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 16 nodes stored and sorted.
- Node data with least eccentricity and average: Category:Emerging technologies (position in group: 0/16)
- Verifying whether Category:Emerging technologies has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 19 nodes, 19 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 19 nodes, 44 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 19 nodes, 44 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 15 nodes stored and sorted.
- Node data with least eccentricity and average: Category:XML (position in group: 0/15)
- Verifying whether Category:XML has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 18 nodes, 18 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 18 nodes, 41 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 18 nodes, 41 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 14 nodes stored and sorted.
- Node data with least eccentricity and average: Category:Data management (position in group: 0/14)
- Verifying whether Category:Data management has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 17 nodes, 17 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 17 nodes, 40 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 17 nodes, 40 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 13 nodes stored and sorted.
- Node data with least eccentricity and average: Category:Knowledge engineering (position in group: 0/13)
- Verifying whether Category:Knowledge engineering has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 16 nodes, 16 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 16 nodes, 38 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 16 nodes, 38 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 12 nodes stored and sorted.
- Node data with least eccentricity and average: Category:Knowledge representation (position in group: 0/12)
- Verifying whether Category:Knowledge representation has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 15 nodes, 15 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 15 nodes, 36 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 15 nodes, 36 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 11 nodes stored and sorted.
- Node data with least eccentricity and average: Tabulator (position in group: 0/11)
- Verifying whether Tabulator has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 14 nodes, 14 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 14 nodes, 33 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 14 nodes, 33 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 10 nodes stored and sorted.
- Node data with least eccentricity and average: Web Ontology Language (position in group: 0/10)
- Verifying whether Web Ontology Language has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 13 nodes, 13 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 13 nodes, 27 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 13 nodes, 27 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 9 nodes stored and sorted.
- Node data with least eccentricity and average: Category:Resource Description Framework (position in group: 0/9)
- Verifying whether Category:Resource Description Framework has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 12 nodes, 12 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 12 nodes, 22 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 12 nodes, 22 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 8 nodes stored and sorted.
- Node data with least eccentricity and average: Category:World Wide Web Consortium standards (position in group: 0/8)
- Verifying whether Category:World Wide Web Consortium standards has link with ., ., ., ., ., ., ., ., ., .:  - no, it hasn't. Then it will be able to remotion.
- Building Gephi Graph Data, Nodes Table Hash and Nodes Table Array from Stream Graph - 11 nodes, 11 edges in the graph structure.
- Classifying connected component - quantity of connected components: 1.
- Calculating distance measures of the whole network - 11 nodes, 19 edges.
- Storing distance measures of the whole network to main node table.
- Calculating eigenvector measure of the whole network - 11 nodes, 19 edges.
- Storing eigenvector measures of the whole network to main node table.
- Creating eccentricity and average sort table of remaining concepts - 7 nodes stored and sorted.
- Goal achieved!!!
- Total concepts:
  7 remaining concepts + 4 original concepts = 11 total concepts  (goal 11 to 19)
  Connected component count: 1 (base: 1)
  Stream Graph: 11 nodes, 20 edges

*** Final stage (building concept map) ***
- Building GEXF Graph File (generated file: C:\\Users\\Iago\\git\\Relationship\teste2\graph_teste2_t4_after_steady_unique_connected.gexf).
- Recording in log statistic of useless concepts.
- Building raw propositions of the concept map - 19 proposition created (0 repeated propositions - eliminated).
- Upgrading the concept map with first heuristic (remove link id number) - 14 propositions changed.
- Upgrading the concept map with second heuristic (change links with vocabulary table) - 15 links name changed.
- Upgrading the concept map with third heuristic (change category in target concepts and links) - 8 propositions changed.
- Upgrading the concept map with fourth heuristic (change category in source concept) - 1 propositions changed.
- Upgrading the concept map with fifth heuristic (create original concepts with zero degrees) - 1 propositions changed.
- Upgrading the concept map with sixth heuristic (join equals concepts without and with category) - 7 concepts changed.
- Upgrading the concept map with seventh heuristic (remove self references) - 3 propositions changed.
- Building GEXF Graph File from final concept map (generated file: C:\\Users\\Iago\\git\\Relationship\teste2\graph_teste2_t5_concept_map.gexf).
- Building TXT final Concept Map (generated file: C:\\Users\\Iago\\git\\Relationship\teste2\conceptmap_teste2.txt).
- Upgrading the concept map with eighth heuristic (change ampersand characters in CXL file) - 0 characters changed.
- Upgrading the concept map with nineth heuristic (put new line in category word) - 2 concepts changed.
- Upgrading the concept map with tenth heuristic (put new line in long sentence) - 5 new lines inserted.
- Upgrading the concept map with eleventh heuristic (set accented characters in CXL file) - 0 characters changed.
- File CXL did not create because there are alone concepts: [Knowledge organization]
- Closing.
- The end.
